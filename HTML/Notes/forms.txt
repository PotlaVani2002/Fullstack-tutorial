What are Forms in HTML?
    HTML forms are used to collect user data for various purposes such as logging in, signing up, submitting feedback, conducting surveys, or even contacting the site administrators. Forms allow users to submit data to a server for processing.

How to Include Forms in HTML?
    You can create forms in HTML using the <form> element. 
    The <form> tag surrounds all the form elements (such as text fields, buttons, and checkboxes) and specifies how and where to send the form data.

Basic Syntax of the <form> Tag:
        <form action="path-to-submit-data" method="POST">
            <!-- Form elements go here -->
        </form>

Attributes of the <form> Tag:

    action: This attribute specifies the URL to which the form data will be sent when the form is submitted. It can be an absolute or relative URL.
        Example:
                <form action="/submit_form" method="POST">
        If the action attribute is omitted, the form will be submitted to the same URL as the current page.
    method: This attribute defines how the form data will be sent to the server. It can take one of two values:
        GET: This method appends form data to the URL, making it visible. It’s suitable for search queries or non-sensitive data.
        Example:
                <form action="search.php" method="GET">
        Limitation: Data is visible in the URL and there’s a limit to the amount of data that can be sent.
        POST: This method sends form data as part of the HTTP request body, making it invisible in the URL. It is used for submitting sensitive data like passwords, or larger amounts of data.
        Example:
                <form action="login.php" method="POST">

Common Form Tags and Elements:

        1. <input> Tag:
            The <input> tag is used to create various types of input fields for users to enter data, such as text, password, checkbox, etc. It is a self-closing tag.
            Common attributes for <input>:

                A. type: Specifies the type of input element. Some common types are:
                        1. text
                                Purpose: Allows the user to enter a single line of text.
                                Example: Username, name, etc.
                                <input type="text" placeholder="Enter Username" name="username" id="username">
                        2. email
                                Purpose: Specifically for email addresses, it validates that the input is in a proper email format (e.g., example@example.com).
                                Example: Collecting user emails.
                                <input type="email" name="email" id="email">
                        3. password
                                Purpose: Used for sensitive information like passwords, displaying each character as a dot or asterisk for privacy.
                                <input type="password" name="password" id="password">
                        4. number
                                Purpose: Allows only numerical input. Additional attributes like min and max can restrict the range of allowed numbers.
                                Example: Collecting age, quantity, etc.
                                <input type="number" name="age" id="age" min="1" max="100">
                        5. date
                                Purpose: Allows the user to select a date from a calendar interface.
                                Example: Birth date, reservation date, etc.
                                <input type="date" name="date" id="date">
                        6. time
                                Purpose: Allows the user to select a specific time.
                                Example: Appointment time, event start time, etc.
                                <input type="time" name="time" id="time">
                        7. datetime-local
                                Purpose: Enables the user to select both a date and a time in local time.
                                Example: Date and time for scheduling local events.
                                <input type="datetime-local" name="dtl" id="dtl">
                        8. month
                                Purpose: Allows the user to select a specific month and year.
                                Example: Birth month, payment month, etc.
                                <input type="month" name="month" id="month">
                        9. week
                                Purpose: Allows the user to select a specific week within a year.
                                Example: Used for scheduling weekly tasks or events.
                                <input type="week" name="week" id="week">
                        10. color
                                Purpose: Provides a color picker for selecting colors.
                                Example: Choosing a theme or favorite color.
                                <input type="color" name="color" id="color">
                        11. range
                                Purpose: Provides a slider to select a numeric value within a defined range.
                                Example: Selecting volume level, brightness, etc.
                                <input type="range" name="range" id="range" min="1" max="100">
                        12. tel
                                Purpose: Allows the user to input a phone number, with optional validation depending on the input pattern.
                                Example: Collecting contact numbers.
                                <input type="tel" name="phone" id="phone" placeholder="123-456-7890">
                        13. url
                                Purpose: Ensures the input is a valid URL format (e.g., https://example.com).
                                Example: Collecting website links.
                                <input type="url" name="website" id="website" placeholder="https://example.com">
                        14. checkbox
                                Purpose: Allows multiple selections within a group; each checkbox can be individually selected.
                                Example: Subscriptions, preferences, or selections where multiple options are allowed.
                                <input type="checkbox" name="subscribe" id="subscribe">
                        15. radio
                                Purpose: Allows selection of a single option within a group.
                                Example: Gender selection, yes/no questions.
                                <input type="radio" name="gender" value="male" id="male">
                                <input type="radio" name="gender" value="female" id="female">
                        16. file
                                Purpose: Allows the user to upload files from their device.
                                Example: Uploading a profile picture, document, or other file.
                                <input type="file" name="file" id="file">
                        17. search
                                Purpose: Provides a search field with potential built-in features like a clear button.
                                Example: Site search or searching within a form.
                                <input type="search" name="search" id="search">
                        18. hidden
                                Purpose: Stores information that users don’t see, typically used for form tracking or submission data.
                                Example: Passing metadata, user IDs, or session info to the server.
                                <input type="hidden" name="hidden" id="hidden">
                        19. reset
                                Purpose: Resets all fields in the form to their initial values.
                                Example: Clearing a form when a user wants to start over.
                                <input type="reset" value="Reset">
                        20. submit
                                Purpose: Submits the form data to the server.
                                Example: Sending the filled form data when completed.
                                <input type="submit" value="Submit">
                        21. button
                                Purpose: Creates a customizable button. It does nothing by itself unless you add JavaScript.
                                Example: Triggering custom actions, like showing/hiding content or calling a function.
                                <input type="button" value="Button">
                                <button>Submit</button>

                B. id: A unique identifier for the input element.
                C. name: The name attribute is used to identify the input data when the form is submitted.
                D. value: Specifies the default value for input fields.
                E. placeholder: A short hint text that shows until the user starts typing.

            Example:
            <input type="text" id="username" name="username" placeholder="Enter your username">

        2. <label> Tag:
        The <label> tag defines labels for <input> elements. It is important for accessibility and usability because it helps screen readers associate labels with the correct input fields. The for attribute of <label> should match the id of the input element.

            Example:
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" placeholder="Enter your username">

        3. <fieldset> Tag:

            The <fieldset> tag is used to group related elements within a form. It visually groups them together in a box with a border, making the form easier to read and understand. It is often paired with the <legend> tag to provide a title or description of the fieldset.

            Example:
            <fieldset>
                <legend>Personal Information</legend>
                <label for="name">Name:</label>
                <input type="text" id="name" name="name">
            </fieldset>

    Why use <fieldset>?

        To organize related fields, making the form more structured and readable.
        Improves accessibility by helping screen readers group related fields.

        3. <legend> Tag:
            The <legend> tag is used to define a title for a <fieldset>. It provides a description or label for the group of fields, making the form more understandable to the user.

            Example:
            <fieldset>
                <legend>Shipping Address</legend>
                <label for="address">Address:</label>
                <input type="text" id="address" name="address">
            </fieldset>

        4. <textarea> Tag:

            The <textarea> tag is used for multi-line input fields, allowing users to enter longer text (such as comments or messages).
            Attributes of <textarea>:

            rows: Specifies the number of visible text lines.
            cols: Specifies the width of the textarea.

            Example:
            <label for="message">Message:</label>
            <textarea id="message" name="message" rows="4" cols="50" placeholder="Enter your message here"></textarea>
        5. <select> and <option> Tags:

            The <select> tag is used to create a drop-down menu, and the <option> tag is used to define the individual options within the dropdown.

            Example:
            <label for="color">Choose a color:</label>
            <select id="color" name="color">
                <option value="red">Red</option>
                <option value="blue">Blue</option>
                <option value="green">Green</option>
            </select>

        6. <button> Tag:

            The <button> tag is used to create clickable buttons. It is often used in forms for submitting or resetting form data.

            Example:
            <button type="submit">Submit</button>
            <button type="reset">Reset</button>


Form Validation

        Form validation is essential to ensure that the data entered by the user is correct and meets the necessary criteria before being submitted. HTML5 offers built-in form validation using attributes like required, minlength, maxlength, pattern, and more.

        Example of Form Validation:
        <form action="/submit" method="POST">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
            
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" minlength="8" required>
            
            <button type="submit">Submit</button>
        </form>
        In this example:

        The email field is required and must contain a valid email address.
        The password field is required and must be at least 8 characters long.

Advanced Form Features:

        File Upload: Use the <input> tag with type="file" to allow users to upload files.

                <label for="file">Upload your file:</label>
                <input type="file" id="file" name="file">

        Multiple Selection (Checkboxes and Radio Buttons):
        Checkbox: Allows users to select multiple options.

                <label for="agree">Agree to terms:</label>
                <input type="checkbox" id="agree" name="agree">

        Radio Button: Allows users to select one option from multiple choices.

                <label for="male">Male</label>
                <input type="radio" id="male" name="gender" value="male">

                <label for="female">Female</label>
                <input type="radio" id="female" name="gender" value="female">

        Autofocus and Autocomplete:

        autofocus: Automatically focuses on a particular form element when the page loads.
        autocomplete: Suggests previously entered values for inputs like name, email, or address.

                <input type="text" id="username" name="username" autofocus autocomplete="username">